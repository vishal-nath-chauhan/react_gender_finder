{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","name","setName","loaded","setLoaded","gender","setGender","prob","setProb","a","axios","get","resp","data","probability","console","log","alert","className","style","width","src","maxHeight","alt","type","value","placeholder","onChange","e","target","onClick","class","role","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAwEeA,EAtEF,WAAO,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,OAEQF,oBAAS,GAFjB,mBAEbG,EAFa,KAELC,EAFK,OAGQJ,mBAAS,IAHjB,mBAGbK,EAHa,KAGLC,EAHK,OAIIN,mBAAS,IAJb,mBAIbO,EAJa,KAIPC,EAJO,iDAMlB,4BAAAC,EAAA,yDACCL,GAAU,GACG,KAATH,EAFL,iCAGmBS,IAAMC,IAAN,yCACkBV,IAJrC,OAGMW,EAHN,OAMEJ,EAAQI,EAAKC,KAAKC,aAClBR,EAAUM,EAAKC,KAAKR,QACpBD,GAAU,GACVW,QAAQC,IAAIJ,GACZV,EAAQ,IAVV,wBAYEe,MAAM,oBACNb,GAAU,GACVF,EAAQ,oBAdV,6CANkB,sBAwBlB,OACC,8BACC,sBACCgB,UAAU,gDACVC,MAAO,CAAEC,MAAO,UAFjB,UAIC,qBACCC,IAAI,6JACJH,UAAU,gBACVC,MAAO,CAAEG,UAAW,SACpBC,IAAI,QAEL,sBAAKL,UAAU,YAAf,UACC,oBAAIA,UAAU,aAAd,8BACA,mBAAGA,UAAU,YAAb,0DAGA,uBACCM,KAAK,OACLC,MAAOxB,EACPyB,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAO1B,EAAQ0B,EAAEC,OAAOJ,UAEnC,uBACA,wBACCP,UAAU,4BACVY,QAlDa,2CAgDd,+BAMA,uBACC3B,EACA,qBAAK4B,MAAM,iBAAiBC,KAAK,SAAjC,SACC,sBAAMD,MAAM,kBAAZ,0BAGD,oBAAGb,UAAU,YAAb,oBACSb,EADT,gBAC8BE,EAD9B,iBCpDS0B,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCOSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e136d223.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nconst Home = () => {\n\tlet [name, setName] = useState(\"\");\n\tlet [loaded, setLoaded] = useState(false);\n\tlet [gender, setGender] = useState(\"\");\n\tlet [prob, setProb] = useState(\"\");\n\n\tasync function getData() {\n\t\tsetLoaded(true);\n\t\tif (name !== \"\") {\n\t\t\tlet resp = await axios.get(\n\t\t\t\t`https://api.genderize.io/?name=${name}`\n\t\t\t);\n\t\t\tsetProb(resp.data.probability);\n\t\t\tsetGender(resp.data.gender);\n\t\t\tsetLoaded(false);\n\t\t\tconsole.log(resp);\n\t\t\tsetName(\"\");\n\t\t} else {\n\t\t\talert(\"enter valid name\");\n\t\t\tsetLoaded(false);\n\t\t\tsetName(\"enter valid name\");\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div\n\t\t\t\tclassName=\"card mh-50 shadow-lg p-3 mb-5 bg-body rounded\"\n\t\t\t\tstyle={{ width: \"15rem;\" }}\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://images.unsplash.com/photo-1545693315-85b6be26a3d6?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Z2VuZGVyJTIwZXF1YWxpdHl8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80\"\n\t\t\t\t\tclassName=\"card-img-top \"\n\t\t\t\t\tstyle={{ maxHeight: \"250px\" }}\n\t\t\t\t\talt=\"...\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<h5 className=\"card-title\">Gender Predictor</h5>\n\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\tEnter your name it will predict your Gender.\n\t\t\t\t\t</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tplaceholder=\"Enter name here\"\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary mt-2 mb-5\"\n\t\t\t\t\t\tonClick={getData}\n\t\t\t\t\t>\n\t\t\t\t\t\tPredict My Gender\n\t\t\t\t\t</button>\n\t\t\t\t\t<br />\n\t\t\t\t\t{loaded ? (\n\t\t\t\t\t\t<div class=\"spinner-border\" role=\"status\">\n\t\t\t\t\t\t\t<span class=\"visually-hidden\">Loading...</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\tGender {gender} Probability {prob}%.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"./components/Home\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}